# -*- coding: utf-8 -*-
"""Day1_Introduction_Python for AI/ML_Workshop.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u5hvsiOejF_LyKoxWp3lZ6fderz5mBxJ

Python for AI/ML:
A Hands-on Workshop for Beginners – Day 1 : 26.07.2025

Prof. Jasbir Singh, HoD Computer Science
"""

# Greeting the user with their name
name = input("Enter your name: ")
print("Welcome to the Python workshop,", name + "!")

# Adding two numbers entered by the user
num1 = input("Enter first number: ")
num2 = input("Enter second number: ")

# Convert strings to integers
num1 = int(num1)
num2 = int(num2)

# Calculate sum
total = num1 + num2
print("The sum is:", total)

# Calculating area using width and height
width = float(input("Enter the width: "))
height = float(input("Enter the height: "))

area = width * height
print("The area of the rectangle is:", area)

"""Assignement 1:  Create a game where the computer randomly selects a number
between 1 and 50.

---


.The player has 5 chances to guess the number. After each guess, provide a hint:
“Too High” if the guess is more
“Too Low” if the guess is less
“Correct!” if the guess matches

"""

#Assignement 1
import random
# Generate a random number between 1 and 50
secret_number = random.randint(1, 50)
# Set the number of guesses allowed
max_guesses = 5
# Loop for the number of guesses
for i in range(max_guesses):
    # Get the user's guess
    guess = int(input("Guess the number (between 1 and 50): "))
    # Check the guess
    if guess > secret_number:
        print("Too High")
    elif guess < secret_number:
        print("Too Low")
    else:
        print("Correct!")
        break
else:
    print("Sorry, you've run out of guesses. The number was", secret_number)

"""Assignemnet 2:  Design a game that scrambles a word (e.g., "python" → "nothpy") and asks the user to guess the original word. Give 3 attempts. At the end, display the correct word if the user fails.

"""

import random

def scramble_word(word):
    """Scrambles a word by shuffling its letters."""
    scrambled = list(word)
    random.shuffle(scrambled)
    return "".join(scrambled)

# List of words to choose from
words = ["python", "programming", "computer", "science", "machine", "learning"]

# Select a random word
original_word = random.choice(words)

# Scramble the word
scrambled_word = scramble_word(original_word)

# Game logic
print("Guess the word! It's a scrambled version of a common term in computer science.")
print("Scrambled word:", scrambled_word)

for attempt in range(3):
    guess = input(f"Attempt {attempt + 1}: ").lower()
    if guess == original_word:
        print("Congratulations! You guessed the word correctly.")
        break
    else:
        print("Incorrect guess.")
else:
    print(f"\nSorry, you're out of attempts. The word was '{original_word}'.")

"""Assignment 3: Rock-Paper-Scissors Game
Problem Statement:
Make a 2-player (user vs computer) Rock-Paper-Scissors game. Each round, both players choose an option, and the winner is decided based on the rules. Display score after 3 rounds.
"""

import random

def get_computer_choice():
    """Randomly returns 'rock', 'paper', or 'scissors'."""
    return random.choice(['rock', 'paper', 'scissors'])

def determine_winner(user_choice, computer_choice):
    """Determines the winner of a round."""
    if user_choice == computer_choice:
        return 'tie'
    elif (user_choice == 'rock' and computer_choice == 'scissors') or \
         (user_choice == 'scissors' and computer_choice == 'paper') or \
         (user_choice == 'paper' and computer_choice == 'rock'):
        return 'user'
    else:
        return 'computer'

def play_game():
    """Plays a 3-round game of Rock-Paper-Scissors."""
    user_score = 0
    computer_score = 0

    for round_num in range(3):
        print(f"\n--- Round {round_num + 1} ---")
        user_choice = input("Enter your choice (rock, paper, or scissors): ").lower()
        while user_choice not in ['rock', 'paper', 'scissors']:
            user_choice = input("Invalid choice. Please enter rock, paper, or scissors: ").lower()

        computer_choice = get_computer_choice()
        print(f"Computer chose: {computer_choice}")

        winner = determine_winner(user_choice, computer_choice)
        if winner == 'user':
            print("You win this round!")
            user_score += 1
        elif winner == 'computer':
            print("Computer wins this round!")
            computer_score += 1
        else:
            print("It's a tie!")

    print("\n--- Final Score ---")
    print(f"You: {user_score}")
    print(f"Computer: {computer_score}")

    if user_score > computer_score:
        print("Congratulations! You won the game.")
    elif computer_score > user_score:
        print("Sorry, you lost the game.")
    else:
        print("The game is a tie.")

# Start the game
play_game()

"""Assignment 4: Dice Rolling Simulator
Problem Statement:
 Simulate the rolling of a dice. Allow the user to roll the dice multiple times by entering ‘yes’ or ‘no’. Print a random number between 1 and 6 for each roll.
"""

import random

def roll_dice():
    """Simulates rolling a single six-sided die."""
    return random.randint(1, 6)

def dice_rolling_simulator():
    """Allows the user to roll a dice multiple times."""
    while True:
        roll = input("Roll the dice? (yes/no): ").lower()
        if roll == 'yes':
            result = roll_dice()
            print(f"You rolled a {result}!")
        elif roll == 'no':
            print("Thanks for playing!")
            break
        else:
            print("Invalid input. Please enter 'yes' or 'no'.")

# Start the simulator
dice_rolling_simulator()

"""Assignment 5: Hangman (Mini Version)

---


Problem Statement:
 Create a mini Hangman game where the user has to guess a 5-letter word. The user can guess one letter at a time, with a maximum of 6 incorrect guesses.
"""

import random

def hangman():
    """Plays a mini version of the Hangman game."""
    word = "apple"
    guessed_letters = []
    incorrect_guesses = 0
    max_incorrect_guesses = 6

    print("Welcome to Hangman!")
    print("The word has 5 letters. You have 6 incorrect guesses.")

    while incorrect_guesses < max_incorrect_guesses:
        display_word = ""
        for letter in word:
            if letter in guessed_letters:
                display_word += letter
            else:
                display_word += "_"
        print("\nWord:", display_word)

        if display_word == word:
            print("Congratulations! You guessed the word correctly.")
            break

        guess = input("Guess a letter: ").lower()

        if len(guess) != 1 or not guess.isalpha():
            print("Invalid input. Please enter a single letter.")
            continue

        if guess in guessed_letters:
            print("You've already guessed that letter.")
            continue

        guessed_letters.append(guess)

        if guess in word:
            print("Correct guess!")
        else:
            incorrect_guesses += 1
            print(f"Incorrect guess! You have {max_incorrect_guesses - incorrect_guesses} guesses left.")

    else:
        print(f"\nSorry, you're out of guesses. The word was '{word}'.")

# Start the game
hangman()